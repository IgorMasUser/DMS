@using Dms.Api.Shared.Components
@inherits LayoutComponentBase

<MudThemeProvider Theme=@AppTheme />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    </MudAppBar>
    <MudDrawer @bind-Open="@drawerOpen" Style="height: 100%; display: flex; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); border: 1px solid #ddd;">
        <MudContainer>
            <NavigationMenu />
        </MudContainer>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth=MaxWidth.ExtraLarge Class="mb-4 mt-4">
            <MudPaper Elevation="3" Class="pa-8" Width="100%">
                <ErrorBoundary @ref="errorBoundary">
                    <ChildContent>
                        @Body
                    </ChildContent>
                    <ErrorContent>
                        <MudAlert Severity="Severity.Error" Variant="Variant.Filled">
                            An error has occurred while processing your request.
                        </MudAlert>
                    </ErrorContent>
                </ErrorBoundary>
            </MudPaper>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private ErrorBoundary? errorBoundary;
    bool drawerOpen = true;
    MudTheme AppTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Primary = Colors.Brown.Darken4,
                Secondary = Colors.Orange.Accent4,
                AppbarBackground = Colors.Brown.Default
            }
        };
    void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }

    protected override void OnParametersSet()
    {
        ResetBoundary();
    }

    private void ResetBoundary()
    {
        errorBoundary?.Recover();
    }
}