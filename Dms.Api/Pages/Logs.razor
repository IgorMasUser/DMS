@page "/system/logs"
@using Dms.Core.Application.Common.DTOs;
@using Dms.Core.Domain.Enums;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.Localization;
@using Microsoft.Extensions.Logging;
@using Severity = MudBlazor.Severity


<PageTitle>@Title</PageTitle>
<style>
    .mud-table-toolbar {
        height: 120px !important;
    }
</style>

<MudDataGrid T="LogDto"
             ServerData="@(ServerReload)"
             FixedHeader="true"
             FixedFooter="false"
             Virtualize="true"
             RowsPerPage="@_defaultPageSize"
             Height="calc(100vh - 360px)"
             Style="min-height:700px"
             Loading="@_loading"
             CurrentPage="@CurrentPage"
             Hover="true" @ref="_table">
    <ToolBarContent>
        <div class="d-flex align-start flex-grow-1">
            <div class="d-flex gap-4">
                <MudIcon Icon="@Icons.Material.Filled.BarChart" Size="Size.Large" />
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.caption">Logs</MudText>

                </div>
            </div>
            <div class="flex-grow-1" />

            <div class="d-flex flex-column justify-end">
                <div class="d-flex">
                    <MudButton DisableElevation Variant="Variant.Outlined"
                                Size="Size.Small"
                                Disabled="@_loading"
                                StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Primary"
                                Style="margin-right: 5px;">
                     </MudButton>
                 </div>
                 <MudStack Row="true" AlignItems="AlignItems.Stretch">
                      
                     <MudTextField T="string" Style="min-width:300px" id="Search" Value="@filterKeyword"  Adornment="Adornment.End"
                                   AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium">
                     </MudTextField>
                 </MudStack>

             </div>
         </div>

     </ToolBarContent>
     <Columns>
         <HierarchyColumn T="LogDto" ButtonDisabledFunc="@(x => string.IsNullOrEmpty(x.Message))" />
         <PropertyColumn CellStyle="width:15%" Property="x => x.TimeStamp" Title="sss">
             <CellTemplate>
                 <ToLocal DateTime="@context.Item.TimeStamp" Format="dd.mm.yyyy HH:MM:ss"></ToLocal>
             </CellTemplate>
         </PropertyColumn>
         <PropertyColumn Sortable="false" CellStyle="width:15%" Property="x => x.Level" Title="sss">
             <CellTemplate>
                 @switch (context.Item.Level)
                {
                    case "Information":
                        <MudChip Color="Color.Info" Size="Size.Small">@context.Item.Level</MudChip>
                        break;
                    case "Warning":
                        <MudChip Color="Color.Warning" Size="Size.Small">@context.Item.Level</MudChip>
                        break;
                    case "Error":
                        <MudChip Color="Color.Error" Size="Size.Small">@context.Item.Level</MudChip>
                        break;
                    case "Critical":
                        <MudChip Color="Color.Error" Size="Size.Small">@context.Item.Level</MudChip>
                        break;
                    case "Trace":
                    case "Debug":
                    default:
                        <MudChip Size="Size.Small">@context.Item.Level</MudChip>
                        break;
                }
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Sortable="false" CellStyle="width:55%" Property="x => x.Message" Title=/>
    </Columns>
    <ChildRowContent>
        <MudCard Elevation="0">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">
                        <strong>context.Item.Level</strong>
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent Class="pt-0">

                <MudText>@_currentDto.Message</MudText>
                <MudText Typo="Typo.body2">context.Item.Message</MudText>
                <br />
               @*  @if (!string.IsNullOrEmpty(context.Item.Exception))
                {
                    <MudText Color="Color.Error">@_currentDto.GetMemberDescription(x => x.Exception)</MudText>
                    <MudText Color="Color.Warning" Typo="Typo.body2">@context.Item.Exception</MudText>
                    <br />
                }

                <MudText>@_currentDto.GetMemberDescription(x => x.ClientIP)</MudText>
                <MudText Typo="Typo.body2">@context.Item.ClientIP</MudText>
                <br />

                <MudText>@_currentDto.GetMemberDescription(x => x.ClientAgent)</MudText>
                <MudText Typo="Typo.body2">@context.Item.ClientAgent</MudText>

                @if (!string.IsNullOrEmpty(context.Item.CorrelationId))
                {
                    <br />
                    <MudText Color="Color.Error">@_currentDto.GetMemberDescription(x => x.CorrelationId)</MudText>
                    <MudText Color="Color.Warning" Typo="Typo.body2">@context.Item.CorrelationId</MudText>
                } *@
            </MudCardContent>
        </MudCard>
    </ChildRowContent>
    <NoRecordsContent>
        <MudText>NoRecords</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Loading</MudText>
    </LoadingContent>
    <PagerContent>
        <MudDataGridPager RowsPerPageString=RowsPerPage PageSizeOptions="@(new[] { 10, 15, 30, 50, 100, 500, 1000 })" />
        <MudDataGrid CurrentPage="@CurrentPage" />
    </PagerContent>
</MudDataGrid>